%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Typesetting Macros
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% =====================================================================
%% \gloss : Format a 2, 4, or 5-line gloss.
%% =====================================================================
%%
%% Example:
%%
%%   \gloss {
%%       Caesar     | pisc-em     | ēm-it
%%       Caesar.nom | fish-acc.sg | buy-3sg.past
%%   }
%%
%% A | delimits columns. You don’t need to line up the columns manually;
%% this was only done here for demonstration purposes. There is also a
%% 4/5-line format if you want to include the original spelling, pronunciation
%% and translation:
%%
%%   \gloss {
%%       Caesar piscem ēmit.
%%       Caesar     | pisc-em     | ēm-it
%%       ˈkae.sar   | pis.kẽˑ     | ˈeː.mɪt      % You can also omit this line.
%%       Caesar.nom | fish-acc.sg | buy-3sg.past
%%       ‘Caesar bought a fish.’
%%   }
%%
%% The first line (the text) is typeset in bold+italic, the second line
%% in italic, any other lines in roman.
%%
%% =====================================================================
%% \multigloss : Format a gloss across multiple lines
%% =====================================================================
%%
%% Example:
%%
%%   \multigloss {
%%       Caesar     | pisc-em     | ēm-it
%%       Caesar.nom | fish-acc.sg | buy-3sg.past
%%   }
%%
%%
%% The syntax of this is identical to \gloss, except that only the 2-line
%% format is supported. Unlike \gloss, which always typesets everything in
%% a single line, this will automatically break the gloss into multiple lines
%% if it would run into the page margin. Use this for longer glosses.
%%
%% You can also put the gloss on multiple lines in the source code; this
%% doesn’t have any effect on the output, but may help to make it more
%% readable:
%%
%%   \multigloss {
%%       Caesar     | pisc-em
%%       Caesar.nom | fish-acc.sg
%%
%%       ēm-it
%%       buy-3sg.past
%%   }
%%
%%
%% The format of the first and second line of a multigloss can be set using
%% \MultiglossFormatFirst and \MultiglossFormatSecond, respectively:
%%
%%   \MultiglossFormatFirst{\ttfamily} % Format first line in typewriter font.
%%   \MultiglossFormatSecond{\itshape} % Format second line in italics.
%%
\NeedsTeXFormat{LaTeX2e}
\ProvidesExplPackage{nguhgloss}{2024/06/11}{v1.0}{Package for typesetting glosses}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Internals
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_generate_variant:Nn \seq_set_split_keep_spaces:Nnn { Nnx }

%% Variables.
\tl_new:N \g__nguh_multigloss_first_tl
\tl_new:N \g__nguh_multigloss_second_tl
\tl_new:N \g__nguh_gloss_quote_format_tl
\tl_new:N \g__nguh_gloss_text_format_tl

%% Initial values.
\tl_gset:Nn \g__nguh_multigloss_first_tl { \itshape }
\tl_gset:Nn \g__nguh_multigloss_second_tl { }
\tl_gset:Nn \g__nguh_gloss_quote_format_tl { \itshape\bfseries }
\tl_gset:Nn \g__nguh_gloss_text_format_tl { \itshape }

%% End a paragraph.
\cs_new:Npn \__nguh_end_par: {
    \ifvmode\else
        \unskip
        \par
    \fi
}

%% Rescan a token list.
\cs_new:Npn \__nguh_gloss_rescan:n #1 {
    { \tl_rescan:nn {} { \ignorespaces #1 } }
}

\cs_generate_variant:Nn \__nguh_gloss_rescan:n { x }

%% Open a \halign for the gloss.
\cs_new:Npn \__nguh_gloss_align_start:w {
    %% We use \halign for this because it lets us repeat columns, and every
    %% single LaTeX table environment (that I know of) is seemingly too stupid
    %% to support this feature...
    \halign{&##\enskip\cr\iffalse}\fi
}

%% Close a \halign for the gloss.
\cs_new:Npn \__nguh_gloss_align_end:w {
    \iffalse{\fi}
}

%% Insert a single line of a gloss.
%%
%% This takes the line #1 and formats it, inserting the contents of #2
%% at the start of each column.
\cs_new:Npn \__nguh_gloss_insert_line:n #1 #2 {
    %% Split the sequence by '|'; take care to expand it first.
    \seq_set_split_keep_spaces:Nnx \l_tmpa_seq { | } { #1 }
    \bool_set_true:N \l_tmpa_bool

    %% Insert each column, delimited by '&'.
    \seq_map_inline:Nn \l_tmpa_seq {
        \bool_if:NF \l_tmpa_bool { & }
        \bool_set_false:N \l_tmpa_bool
        #2 { \__nguh_gloss_rescan:n { ##1 } }
    }
}

%% Process two words. Used by \multigloss.
\cs_new:Npn \__nguh_multigloss_word:nn #1#2 {
    \allowbreak

    \hbox {
        \begin{tabular}{@{}l}
            \tl_use:N \g__nguh_multigloss_first_tl \__nguh_gloss_rescan:n {#1} \\
            \noalign{\vskip-6pt}
            \tl_use:N \g__nguh_multigloss_second_tl \__nguh_gloss_rescan:n {#2} \\
        \end{tabular}
    }

    \space
}

%% Process two lines. Used by \multigloss.
\cs_new:Npn \__nguh_multigloss:NN #1 #2 {
    \ifvmode\noindent\leavevmode\fi

    %% Split the lines into words.
    \seq_set_split_keep_spaces:Nnx \l_tmpa_seq { | } { #1 }
    \seq_set_split_keep_spaces:Nnx \l_tmpb_seq { | } { #2 }

    %% Iterate over each word in the two lines.
    \seq_mapthread_function:NNN \l_tmpa_seq \l_tmpb_seq \__nguh_multigloss_word:nn
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Interface
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NewDocumentCommand \gloss {
    > { \exp_args:Nx \SplitList { \iow_char:N \^^M } } +v
} {
    \__nguh_end_par:
    \addvspace { 8pt }
    \noindent

    %% Filter out empty lines.
    \seq_gclear:N \g_tmpa_seq
    \tl_map_inline:nn { #1 } {
        \tl_if_blank:nF { ##1 } {
            \seq_gput_right:Nn \g_tmpa_seq { ##1 }
        }
    }

    %% Clear this to avoid unwanted insertions.
    \everycr={}

    %% Dispatch to the appropriate formatter.
    \vtop {
        %% Turn off centering.
        \leftskip\z@
        \rightskip\z@

        %% Format the lines.
        \int_case:nnF { \seq_count:N \g_tmpa_seq } {
            %% Text, Gloss
            2 {
                \__nguh_gloss_align_start:w
                    \__nguh_gloss_insert_line:n { \seq_item:Nn \g_tmpa_seq 1 } { \tl_use:N \g__nguh_gloss_text_format_tl } \cr
                    \__nguh_gloss_insert_line:n { \seq_item:Nn \g_tmpa_seq 2 } {} \cr
                \__nguh_gloss_align_end:w
            }

            %% Quote, Text, Gloss, Translation
            4 {
                \hbox { \tl_use:N \g__nguh_gloss_quote_format_tl \__nguh_gloss_rescan:x { \seq_item:Nn \g_tmpa_seq 1 } }
                \__nguh_gloss_align_start:w
                    \__nguh_gloss_insert_line:n { \seq_item:Nn \g_tmpa_seq 2 } { \tl_use:N \g__nguh_gloss_text_format_tl } \cr
                    \__nguh_gloss_insert_line:n { \seq_item:Nn \g_tmpa_seq 3 } {} \cr
                \__nguh_gloss_align_end:w
                \hbox { \__nguh_gloss_rescan:x { \seq_item:Nn \g_tmpa_seq 4 } }
            }

            %% Quote, Text, IPA, Gloss, Translation
            5 {
                \hbox { \tl_use:N \g__nguh_gloss_quote_format_tl \__nguh_gloss_rescan:x { \seq_item:Nn \g_tmpa_seq 1 } }
                \__nguh_gloss_align_start:w
                    \__nguh_gloss_insert_line:n { \seq_item:Nn \g_tmpa_seq 2 } { \tl_use:N \g__nguh_gloss_text_format_tl } \cr
                    \__nguh_gloss_insert_line:n { \seq_item:Nn \g_tmpa_seq 3 } {} \cr
                    \__nguh_gloss_insert_line:n { \seq_item:Nn \g_tmpa_seq 4 } {} \cr
                \__nguh_gloss_align_end:w
                \hbox { \__nguh_gloss_rescan:x { \seq_item:Nn \g_tmpa_seq 5 } }
            }
        } {
            %% Any other line count is an error.
            \msg_new:nnn { gloss } { too-many-lines } {
                Unexpected~number~of~lines~in~gloss:~expected~2/4/5~got~\int_use:N \g_tmpa_int
            }

            \msg_error:nn { gloss } { too-many-lines }
        }
    }

    %% Close the table.
    \__nguh_end_par:
    \addvspace { 8pt }
    \everypar { \setbox\z@\lastbox \everypar{} }
}

%% Typeset two-line glosses across multiple lines.
\NewDocumentCommand \multigloss {
    > { \exp_args:Nx \SplitList { \iow_char:N \^^M } } +v
} {
    \__nguh_end_par:
    \group_begin:
    \linespread { 1.5 } \selectfont
    \raggedright
    \begin{sloppypar}

    %% Iterate over each line, two lines at a time.
    \bool_gset_true:N \g_tmpa_bool
    \tl_map_inline:nn { #1 } {
        %% Ignore empty lines entirely.
        \tl_if_blank:nF { ##1 } {
            \bool_if:NTF \g_tmpa_bool {
                \tl_gset:Nn \g_tmpa_tl { ##1 }
            } {
                \tl_gset:Nn \g_tmpb_tl { ##1 }
                \__nguh_multigloss:NN \g_tmpa_tl \g_tmpb_tl
            }

            %% Flip.
            \bool_gset_inverse:N \g_tmpa_bool
        }
    }

    \end{sloppypar}
    \group_end:
}

\NewDocumentCommand \GlossSetQuoteFormat { m } {
    \tl_gset:Nn \g__nguh_gloss_quote_format_tl { #1 }
}

\NewDocumentCommand \GlossSetTextFormat { m } {
    \tl_gset:Nn \g__nguh_gloss_text_format_tl { #1 }
}

\NewDocumentCommand \MultiglossFormatFirst { m } {
    \tl_gset:Nn \g__nguh_multigloss_first_tl { #1 }
}

\NewDocumentCommand \MultiglossFormatSecond { m } {
    \tl_gset:Nn \g__nguh_multigloss_second_tl { #1 }
}
